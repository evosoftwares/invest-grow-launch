import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { AdminLayout } from "@/components/admin/AdminLayout";
import { Users, UserCheck, TrendingUp, DollarSign, Target, BarChart3 } from "lucide-react";
import { useDashboardData } from "@/hooks/useDashboardData";
import { useInvestments } from "@/hooks/useInvestments";
import { usePartners } from "@/hooks/usePartners";
import { Skeleton } from "@/components/ui/skeleton";
const AdminDashboard = () => {
    const { data: dashboardStats, isLoading: statsLoading } = useDashboardData();
    const { data: investments, isLoading: investmentsLoading } = useInvestments();
    const { data: partners, isLoading: partnersLoading } = usePartners();
    // Formatador de moeda
    const formatCurrency = (value) => {
        return new Intl.NumberFormat('pt-BR', {
            style: 'currency',
            currency: 'BRL'
        }).format(value);
    };
    const formatPercentage = (value) => {
        return `${value.toFixed(1)}%`;
    };
    if (statsLoading) {
        return (_jsx(AdminLayout, { children: _jsxs("div", { className: "space-y-6", children: [_jsxs("div", { children: [_jsx("h1", { className: "text-3xl font-bold tracking-tight", children: "Dashboard" }), _jsx("p", { className: "text-muted-foreground", children: "Vis\u00E3o geral do sistema de capta\u00E7\u00E3o de investimentos" })] }), _jsx("div", { className: "grid gap-4 md:grid-cols-2 lg:grid-cols-4", children: [...Array(6)].map((_, i) => (_jsx(Skeleton, { className: "h-32" }, i))) })] }) }));
    }
    const progressPercentage = dashboardStats
        ? (dashboardStats.totalAmount / dashboardStats.investmentGoal) * 100
        : 0;
    return (_jsx(AdminLayout, { children: _jsxs("div", { className: "space-y-6", children: [_jsxs("div", { children: [_jsx("h1", { className: "text-3xl font-bold tracking-tight", children: "Dashboard" }), _jsx("p", { className: "text-muted-foreground", children: "Vis\u00E3o geral do sistema de capta\u00E7\u00E3o de investimentos" })] }), _jsxs("div", { className: "grid gap-4 md:grid-cols-2 lg:grid-cols-4", children: [_jsxs(Card, { children: [_jsxs(CardHeader, { className: "flex flex-row items-center justify-between space-y-0 pb-2", children: [_jsx(CardTitle, { className: "text-sm font-medium", children: "Total de Investidores" }), _jsx(Users, { className: "h-4 w-4 text-muted-foreground" })] }), _jsxs(CardContent, { children: [_jsx("div", { className: "text-2xl font-bold", children: (dashboardStats === null || dashboardStats === void 0 ? void 0 : dashboardStats.totalInvestors) || 0 }), _jsx("p", { className: "text-xs text-muted-foreground", children: "Leads registrados no sistema" })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { className: "flex flex-row items-center justify-between space-y-0 pb-2", children: [_jsx(CardTitle, { className: "text-sm font-medium", children: "Parceiros Ativos" }), _jsx(UserCheck, { className: "h-4 w-4 text-muted-foreground" })] }), _jsxs(CardContent, { children: [_jsx("div", { className: "text-2xl font-bold", children: (dashboardStats === null || dashboardStats === void 0 ? void 0 : dashboardStats.activePartners) || 0 }), _jsxs("p", { className: "text-xs text-muted-foreground", children: ["de ", (dashboardStats === null || dashboardStats === void 0 ? void 0 : dashboardStats.totalPartners) || 0, " parceiros cadastrados"] })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { className: "flex flex-row items-center justify-between space-y-0 pb-2", children: [_jsx(CardTitle, { className: "text-sm font-medium", children: "Valor Captado" }), _jsx(DollarSign, { className: "h-4 w-4 text-muted-foreground" })] }), _jsxs(CardContent, { children: [_jsx("div", { className: "text-2xl font-bold", children: formatCurrency((dashboardStats === null || dashboardStats === void 0 ? void 0 : dashboardStats.totalAmount) || 0) }), _jsx("p", { className: "text-xs text-muted-foreground", children: "Investimentos confirmados" })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { className: "flex flex-row items-center justify-between space-y-0 pb-2", children: [_jsx(CardTitle, { className: "text-sm font-medium", children: "Taxa de Convers\u00E3o" }), _jsx(TrendingUp, { className: "h-4 w-4 text-muted-foreground" })] }), _jsxs(CardContent, { children: [_jsx("div", { className: "text-2xl font-bold", children: formatPercentage((dashboardStats === null || dashboardStats === void 0 ? void 0 : dashboardStats.conversionRate) || 0) }), _jsx("p", { className: "text-xs text-muted-foreground", children: "Leads convertidos em investidores" })] })] })] }), _jsxs("div", { className: "grid gap-4 md:grid-cols-2 lg:grid-cols-3", children: [_jsxs(Card, { className: "lg:col-span-2", children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(Target, { className: "h-5 w-5" }), "Progresso da Capta\u00E7\u00E3o"] }), _jsxs(CardDescription, { children: ["Meta: ", formatCurrency((dashboardStats === null || dashboardStats === void 0 ? void 0 : dashboardStats.investmentGoal) || 0)] })] }), _jsx(CardContent, { children: _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { children: "Captado" }), _jsx("span", { children: formatCurrency((dashboardStats === null || dashboardStats === void 0 ? void 0 : dashboardStats.totalAmount) || 0) })] }), _jsx("div", { className: "w-full bg-gray-200 rounded-full h-3", children: _jsx("div", { className: "bg-blue-600 h-3 rounded-full transition-all duration-300", style: { width: `${Math.min(progressPercentage, 100)}%` } }) }), _jsxs("div", { className: "flex justify-between text-xs text-muted-foreground", children: [_jsx("span", { children: "0%" }), _jsx("span", { className: "font-medium", children: formatPercentage(progressPercentage) }), _jsx("span", { children: "100%" })] })] }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(BarChart3, { className: "h-5 w-5" }), "Status dos Investimentos"] }) }), _jsx(CardContent, { children: _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm", children: "Pendentes" }), _jsx(Badge, { variant: "outline", children: (dashboardStats === null || dashboardStats === void 0 ? void 0 : dashboardStats.pendingInvestments) || 0 })] }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm", children: "Total" }), _jsx(Badge, { variant: "secondary", children: (dashboardStats === null || dashboardStats === void 0 ? void 0 : dashboardStats.totalInvestments) || 0 })] })] }) })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Investimentos Recentes" }), _jsx(CardDescription, { children: "\u00DAltimos investimentos registrados no sistema" })] }), _jsx(CardContent, { children: investmentsLoading ? (_jsx("div", { className: "space-y-3", children: [...Array(5)].map((_, i) => (_jsx(Skeleton, { className: "h-12 w-full" }, i))) })) : investments && investments.length > 0 ? (_jsx("div", { className: "space-y-3", children: investments.slice(0, 5).map((investment) => {
                                    var _a, _b;
                                    return (_jsxs("div", { className: "flex items-center justify-between p-3 border rounded-lg", children: [_jsxs("div", { children: [_jsx("p", { className: "font-medium", children: (_a = investment.investors) === null || _a === void 0 ? void 0 : _a.full_name }), _jsx("p", { className: "text-sm text-muted-foreground", children: (_b = investment.investors) === null || _b === void 0 ? void 0 : _b.email })] }), _jsxs("div", { className: "text-right", children: [_jsx("p", { className: "font-medium", children: formatCurrency(investment.amount) }), _jsx(Badge, { variant: investment.status === 'paid' ? 'default' :
                                                            investment.status === 'approved' ? 'secondary' :
                                                                'outline', children: investment.status })] })] }, investment.id));
                                }) })) : (_jsx("p", { className: "text-center text-muted-foreground py-8", children: "Nenhum investimento encontrado" })) })] })] }) }));
};
export default AdminDashboard;
