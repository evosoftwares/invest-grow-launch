import { jsxs as _jsxs, jsx as _jsx } from "react/jsx-runtime";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table";
import { PartnerStatusBadge } from "./PartnerStatusBadge";
import { PartnerTableActions } from "./PartnerTableActions";
export const PartnersTable = ({ partners, onStatusChange, isLoading }) => {
    return (_jsxs(Card, { children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { children: ["Lista de Parceiros (", partners.length, ")"] }) }), _jsx(CardContent, { children: _jsx("div", { className: "overflow-x-auto", children: _jsxs(Table, { children: [_jsx(TableHeader, { children: _jsxs(TableRow, { children: [_jsx(TableHead, { children: "Parceiro" }), _jsx(TableHead, { children: "Status" }), _jsx(TableHead, { children: "Taxa Comiss\u00E3o" }), _jsx(TableHead, { children: "Especialidade" }), _jsx(TableHead, { children: "Data Cadastro" }), _jsx(TableHead, { children: "A\u00E7\u00F5es" })] }) }), _jsx(TableBody, { children: partners.map((partner) => {
                                    var _a, _b, _c;
                                    return (_jsxs(TableRow, { children: [_jsx(TableCell, { children: _jsxs("div", { children: [_jsx("div", { className: "font-medium", children: ((_a = partner.profiles) === null || _a === void 0 ? void 0 : _a.full_name) || partner.business_name || 'Nome não informado' }), _jsx("div", { className: "text-sm text-gray-500", children: ((_b = partner.profiles) === null || _b === void 0 ? void 0 : _b.email) || 'Email não informado' }), ((_c = partner.profiles) === null || _c === void 0 ? void 0 : _c.phone) && (_jsx("div", { className: "text-sm text-gray-500", children: partner.profiles.phone }))] }) }), _jsx(TableCell, { children: _jsx(PartnerStatusBadge, { status: partner.status }) }), _jsxs(TableCell, { className: "font-medium", children: [Number(partner.commission_rate).toFixed(1), "%"] }), _jsx(TableCell, { children: partner.specialty || '-' }), _jsx(TableCell, { children: new Date(partner.created_at).toLocaleDateString('pt-BR') }), _jsx(TableCell, { children: _jsx(PartnerTableActions, { partner: partner, onStatusChange: onStatusChange, isLoading: isLoading }) })] }, partner.id));
                                }) })] }) }) })] }));
};
