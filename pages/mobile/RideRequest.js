import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Badge } from "@/components/ui/badge";
import { useNavigate } from "react-router-dom";
import { ArrowLeft, MapPin, Car, Settings, CreditCard } from 'lucide-react';
const RideRequest = () => {
    const navigate = useNavigate();
    const [rideData, setRideData] = useState({
        pickup: '',
        destination: '',
        rideType: '',
        passengers: '1',
        notes: ''
    });
    const rideTypes = [
        { id: 'economy', name: 'Econômica', price: 'R$ 12,50', time: '5 min' },
        { id: 'comfort', name: 'Conforto', price: 'R$ 18,90', time: '3 min' },
        { id: 'premium', name: 'Premium', price: 'R$ 25,40', time: '2 min' }
    ];
    const handleRequestRide = () => {
        // Simula a solicitação de corrida
        navigate('/mobile/ride-progress');
    };
    return (_jsxs("div", { className: "min-h-screen bg-gradient-to-br from-slate-50 to-blue-50", children: [_jsx("div", { className: "bg-white/90 backdrop-blur-sm shadow-sm p-4", children: _jsxs("div", { className: "flex items-center gap-3", children: [_jsx(Button, { variant: "ghost", size: "icon", onClick: () => navigate('/mobile/client-dashboard'), className: "hover:bg-slate-100", children: _jsx(ArrowLeft, { className: "h-5 w-5 text-slate-600" }) }), _jsx("img", { src: "/lovable-uploads/aa2570db-abbc-4ebd-8d58-1d58c9570128.png", alt: "Logo", className: "h-6" }), _jsx("h1", { className: "text-xl font-light text-slate-700", children: "Solicitar Corrida" })] }) }), _jsxs("div", { className: "p-4 space-y-6", children: [_jsxs(Card, { className: "border-slate-200 bg-white/90 backdrop-blur-sm shadow-sm", children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { className: "text-lg font-medium text-slate-700 flex items-center gap-2", children: [_jsx(MapPin, { className: "h-5 w-5 text-blue-500" }), "Localiza\u00E7\u00E3o"] }) }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs("div", { className: "space-y-2", children: [_jsx(Label, { htmlFor: "pickup", className: "text-sm font-medium text-slate-700", children: "Ponto de Partida" }), _jsx(Input, { id: "pickup", placeholder: "Digite o endere\u00E7o de partida", value: rideData.pickup, onChange: (e) => setRideData(Object.assign(Object.assign({}, rideData), { pickup: e.target.value })), className: "border-slate-200 focus:border-blue-400 focus:ring-2 focus:ring-blue-100 h-11" })] }), _jsxs("div", { className: "space-y-2", children: [_jsx(Label, { htmlFor: "destination", className: "text-sm font-medium text-slate-700", children: "Destino" }), _jsx(Input, { id: "destination", placeholder: "Para onde voc\u00EA quer ir?", value: rideData.destination, onChange: (e) => setRideData(Object.assign(Object.assign({}, rideData), { destination: e.target.value })), className: "border-slate-200 focus:border-blue-400 focus:ring-2 focus:ring-blue-100 h-11" })] })] })] }), _jsxs(Card, { className: "border-slate-200 bg-white/90 backdrop-blur-sm shadow-sm", children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { className: "text-lg font-medium text-slate-700 flex items-center gap-2", children: [_jsx(Car, { className: "h-5 w-5 text-blue-500" }), "Tipo de Corrida"] }) }), _jsx(CardContent, { className: "space-y-3", children: rideTypes.map((type) => (_jsx("div", { className: `p-4 border-2 rounded-lg cursor-pointer transition-all duration-200 ${rideData.rideType === type.id
                                        ? 'border-blue-400 bg-blue-50'
                                        : 'border-slate-200 hover:border-slate-300 hover:bg-slate-50'}`, onClick: () => setRideData(Object.assign(Object.assign({}, rideData), { rideType: type.id })), children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("h4", { className: "font-semibold text-slate-800", children: type.name }), _jsxs("p", { className: "text-sm text-slate-500", children: ["Chegada em ~", type.time] })] }), _jsxs("div", { className: "text-right", children: [_jsx("p", { className: "text-lg font-medium text-blue-600", children: type.price }), rideData.rideType === type.id && (_jsx(Badge, { className: "bg-blue-500 text-white mt-1", children: "Selecionado" }))] })] }) }, type.id))) })] }), _jsxs(Card, { className: "border-slate-200 bg-white/90 backdrop-blur-sm shadow-sm", children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { className: "text-lg font-medium text-slate-700 flex items-center gap-2", children: [_jsx(Settings, { className: "h-5 w-5 text-blue-500" }), "Op\u00E7\u00F5es Adicionais"] }) }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs("div", { className: "space-y-2", children: [_jsx(Label, { htmlFor: "passengers", className: "text-sm font-medium text-slate-700", children: "N\u00FAmero de Passageiros" }), _jsxs(Select, { value: rideData.passengers, onValueChange: (value) => setRideData(Object.assign(Object.assign({}, rideData), { passengers: value })), children: [_jsx(SelectTrigger, { className: "w-full border-slate-200 focus:border-blue-400 focus:ring-2 focus:ring-blue-100 bg-white h-11", children: _jsx(SelectValue, { placeholder: "Selecione" }) }), _jsxs(SelectContent, { className: "bg-white border-slate-200 shadow-lg", children: [_jsx(SelectItem, { value: "1", children: "1 passageiro" }), _jsx(SelectItem, { value: "2", children: "2 passageiros" }), _jsx(SelectItem, { value: "3", children: "3 passageiros" }), _jsx(SelectItem, { value: "4", children: "4 passageiros" })] })] })] }), _jsxs("div", { className: "space-y-2", children: [_jsx(Label, { htmlFor: "notes", className: "text-sm font-medium text-slate-700", children: "Observa\u00E7\u00F5es (opcional)" }), _jsx(Input, { id: "notes", placeholder: "Ex: Preciso de ajuda com bagagem", value: rideData.notes, onChange: (e) => setRideData(Object.assign(Object.assign({}, rideData), { notes: e.target.value })), className: "border-slate-200 focus:border-blue-400 focus:ring-2 focus:ring-blue-100 h-11" })] })] })] }), _jsx(Card, { className: "border-slate-200 bg-white/90 backdrop-blur-sm shadow-sm", children: _jsx(CardContent, { className: "p-4", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "flex items-center gap-3", children: [_jsx(CreditCard, { className: "h-6 w-6 text-slate-600" }), _jsxs("div", { children: [_jsx("p", { className: "font-medium text-slate-700", children: "M\u00E9todo de Pagamento" }), _jsx("p", { className: "text-sm text-slate-500", children: "Saldo em carteira" })] })] }), _jsx(Button, { variant: "outline", size: "sm", className: "border-slate-200 hover:bg-slate-50", children: "Alterar" })] }) }) }), _jsxs(Button, { onClick: handleRequestRide, disabled: !rideData.pickup || !rideData.destination || !rideData.rideType, className: `w-full h-14 text-lg font-semibold shadow-sm flex items-center justify-center gap-2 ${rideData.pickup && rideData.destination && rideData.rideType
                            ? 'bg-blue-500 hover:bg-blue-600 text-white'
                            : 'bg-slate-300 cursor-not-allowed text-slate-500'}`, children: [_jsx(Car, { className: "h-6 w-6" }), "Solicitar Corrida"] })] })] }));
};
export default RideRequest;
